use super::*;

// Initial states for the thread local Rngs for up to 32 threads
const SEEDS: [[u8; 16]; 32] = [
    [130, 241, 105, 144, 39, 87, 188, 11, 85, 171, 153, 10, 140, 0, 21, 127],
    [70, 187, 156, 6, 246, 232, 247, 25, 235, 209, 130, 118, 4, 135, 179, 236],
    [26, 219, 234, 105, 208, 114, 180, 69, 216, 135, 201, 171, 12, 6, 123, 212],
    [227, 109, 87, 135, 169, 131, 167, 246, 31, 27, 157, 171, 172, 95, 138, 208],
    [246, 129, 158, 76, 166, 226, 173, 120, 25, 79, 18, 224, 150, 189, 185, 108],
    [5, 222, 116, 10, 22, 94, 51, 99, 147, 153, 127, 75, 131, 240, 109, 36],
    [109, 187, 92, 92, 113, 182, 200, 181, 108, 10, 182, 20, 183, 227, 110, 31],
    [164, 193, 79, 59, 203, 216, 16, 69, 100, 189, 226, 237, 128, 212, 36, 186],
    [45, 128, 45, 123, 47, 205, 32, 248, 146, 137, 255, 230, 136, 61, 83, 157],
    [77, 153, 82, 81, 174, 246, 82, 40, 109, 218, 81, 149, 149, 58, 40, 227],
    [113, 182, 204, 99, 216, 101, 213, 192, 154, 142, 247, 92, 85, 129, 158, 249],
    [58, 12, 213, 148, 80, 71, 3, 131, 127, 33, 69, 244, 118, 136, 68, 22],
    [112, 118, 233, 253, 34, 184, 166, 184, 193, 60, 99, 123, 240, 36, 236, 146],
    [159, 45, 253, 86, 34, 246, 181, 53, 40, 226, 99, 119, 55, 49, 234, 232],
    [65, 212, 51, 151, 18, 90, 48, 98, 224, 152, 63, 165, 244, 58, 145, 96],
    [11, 198, 209, 78, 84, 244, 248, 106, 150, 42, 131, 253, 222, 133, 86, 240],
    [56, 234, 129, 242, 5, 149, 213, 157, 2, 243, 67, 143, 161, 58, 118, 255],
    [129, 65, 215, 162, 83, 242, 137, 48, 164, 122, 141, 234, 184, 216, 244, 143],
    [100, 29, 154, 167, 42, 44, 86, 36, 104, 40, 197, 82, 189, 246, 15, 57],
    [182, 211, 161, 68, 128, 69, 227, 148, 170, 134, 66, 3, 131, 19, 176, 121],
    [56, 124, 71, 100, 139, 55, 147, 34, 69, 250, 92, 76, 254, 146, 47, 185],
    [163, 0, 228, 28, 116, 159, 221, 131, 129, 213, 145, 146, 28, 149, 240, 91],
    [254, 226, 85, 14, 233, 94, 107, 21, 207, 33, 97, 27, 112, 105, 232, 57],
    [84, 237, 240, 211, 128, 233, 186, 227, 26, 218, 130, 143, 160, 110, 227, 123],
    [181, 70, 208, 157, 198, 240, 77, 70, 124, 169, 177, 72, 58, 89, 221, 246],
    [200, 16, 45, 212, 137, 185, 194, 207, 5, 194, 5, 177, 98, 192, 241, 254],
    [31, 181, 103, 203, 152, 137, 57, 59, 247, 2, 101, 9, 212, 37, 64, 117],
    [13, 233, 112, 225, 108, 183, 53, 163, 83, 226, 234, 177, 153, 105, 128, 138],
    [120, 228, 203, 74, 152, 2, 166, 62, 112, 145, 45, 99, 128, 117, 88, 191],
    [146, 87, 24, 16, 184, 243, 100, 92, 119, 181, 129, 66, 230, 194, 185, 68],
    [3, 155, 76, 149, 237, 160, 15, 33, 105, 102, 239, 112, 148, 90, 70, 171],
    [139, 107, 35, 62, 225, 77, 246, 8, 110, 216, 33, 152, 106, 238, 0, 5],
];

#[test]
fn generate_directed() {
    let graph = AdjLists::gen_directed(30, 100, 1, SEEDS.iter().cloned());

    assert!(graph.vertices().count() == 30);
    assert!(graph.edges().count() == 100);
}
